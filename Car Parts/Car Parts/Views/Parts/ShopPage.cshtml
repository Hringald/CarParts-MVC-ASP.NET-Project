@model AllPartsViewModel;
@{
    ViewData["Title"] = "Shop Page";
}
<div class="text-center">
    <h1 class="display-4">Parts</h1>
</div>

<div class="container mb-3">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="~/css/ShopPage.css">
</div>

<form method="get" class="example" asp-controller="Parts" asp-action="ShopPage">
    <input type="hidden" asp-for="Make" value="@Model.Make" />
    <input type="hidden" asp-for="Model" value="@Model.Model" />
    <input type="hidden" asp-for="Category" value="@Model.Category" />
    <input asp-for="SearchTerm" type="text" placeholder="Search...">
    <input type="hidden" asp-for="CurrentPage" value="1" />
    <button type="submit"><i class="fa fa-search"></i></button>
</form>

<div class="row mt-5 mb-4">
    @if (!Model.Parts.Any())
    {
        <h3>There are no part for the given model</h3>
    }
    else
    {
        @foreach (var part in Model.Parts)
        {
            <div class="card col-6 col-lg-3 mr-2 game-card">
                <img src="@part.ImageUrl"
                     class="card-img-top img-fluid card-image rounded" data-toggle="tooltip"
                     data-placement="bottom" title="car.Year car.Model">
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item text-center">@part.Name</li>
                    </ul>
                    <p style="margin:auto;margin-top:15px">Quantity:@part.Quantity</p><p style="margin:auto;margin-bottom:15px">Price:@part.Price $</p>
                    <a asp-controller="Parts" asp-action="Info" asp-route-id="@part.Id" class="btn btn-block btn-primary">Part Info</a>
                </div>
            </div>
        }
    }
</div>

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPages = Math.Ceiling((double)Model.TotalParts / AllPartsViewModel.PartsPerPage);
}

<div class="row">
    <div class="col-md-6">
        <a class="btn btn-primary"
           asp-controller="Parts"
           asp-action="ShopPage"
           asp-route-Make="@Model.Make"
           asp-route-Model="@Model.Model"
           asp-route-Category="@Model.Category"
           asp-route-CurrentPage="@previousPage"><<</a>
    </div>
    <div class="col-md-6">
        <a class="btn btn-primary float-right @(Model.CurrentPage==maxPages?"disabled":string.Empty)"
           asp-controller="Parts"
           asp-action="ShopPage"
           asp-route-Make="@Model.Make"
           asp-route-Model="@Model.Model"
           asp-route-Category="@Model.Category"
           asp-route-CurrentPage="@(Model.CurrentPage+1)">>></a>
    </div>
</div>